menu "Hardware allocator support"

menuconfig FSL_BMAN
	bool "Freescale Buffer Manager (datapath) support"
	depends on PPC_E500MC
	default y
	---help---
	  If unsure, say Y.

if FSL_BMAN

config FSL_BMAN_CHECKING
	bool "additional driver checking"
	default y
	---help---
	  Compiles in additional checks to sanity-check the Bman driver and any
	  use of it by other code. Not recommended for performance.

config FSL_BMAN_PORTAL
	bool "Bman portal support"
	default y
	---help---
	  Compiles support to detect and support Bman software corenet portals
	  (as provided by the device-tree).

# The current driver is interrupt-driven only (poll-driven isn't yet supported).
config FSL_BMAN_HAVE_POLL
	bool
	default n

config FSL_BMAN_PORTAL_DISABLEAUTO
	bool "disable auto-initialisation of cpu-affine portals"
	depends on FSL_BMAN_PORTAL
	default n
	---help---
	  The high-level portal API, in its normal usage, requires that each cpu
	  have a portal assigned to it that is auto-initialised. If an
	  application is manually initialising portals in a non-cpu-affine
	  manner (or you are using the low-level portal API), this may need to
	  be disabled. If in doubt, say N.

config FSL_BMAN_CONFIG
	bool "Bman device management"
	default y
	---help---
	  If this linux image is running natively, you need this option. If this
	  linux image is running as a guest OS under the hypervisor, only one
	  guest OS ("the control plane") needs this option.

config FSL_BMAN_TEST
	tristate "Bman self-tests"
	depends on FSL_BMAN_PORTAL
	default n
	---help---
	  This option compiles self-test code for Bman.

config FSL_BMAN_TEST_LOW
	bool "Bman low-level self-test"
	depends on FSL_BMAN_TEST && FSL_BMAN_PORTAL_DISABLEAUTO
	default y
	---help---
	  This takes an unused portal and portal and performs low-level
	  API testing with it.

config FSL_BMAN_TEST_HIGH
	bool "Bman high-level self-test"
	depends on FSL_BMAN_TEST && !FSL_BMAN_PORTAL_DISABLEAUTO
	default y
	---help---
	  This requires the presence of cpu-affine portals, and performs
	  high-level API testing with them (whichever portal(s) are affine to
	  the cpu(s) the test executes on).

endif # FSL_BMAN

endmenu
